#!/bin/bash
action=$1
target=$2
args=$@

BASE_DIR=/opt
ORIGINAL_PORT=9999
ORIGINAL_VERSION=v1.0.0
ORIGINAL_ENTRANCE=entrance
ORIGINAL_USERNAME=username
ORIGINAL_PASSWORD=password

# 检查是否是root用户，避免多次要求输入密码
check_root() {
    if [[ $EUID -ne 0 ]]; then
        echo "此脚本需要以root身份运行。"
        exit 1
    fi
}

function usage() {
    echo "1Panel 控制脚本"
    echo
    echo "Usage: "
    echo "  ./1pctl [COMMAND] [ARGS...]"
    echo "  ./1pctl --help"
    echo
    echo "Commands: "
    echo "  status              查看 1Panel 服务运行状态"
    echo "  start               启动 1Panel 服务"
    echo "  stop                停止 1Panel 服务"
    echo "  restart             重启 1Panel 服务"
    echo "  uninstall           卸载 1Panel 服务"
    echo "  user-info           获取 1Panel 用户信息"
    echo "  listen-ip           切换 1Panel 监听 IP"
    echo "  version             查看 1Panel 版本信息"
    echo "  update              修改 1Panel 系统信息"
    echo "  reset               重置 1Panel 系统信息"
    echo "  restore             恢复 1Panel 服务及数据"
}
function status() {
    service 1panel status
}
function start() {
    service 1panel start && echo "1Panel 服务已启动。"  || systemctl start 1panel.service
}
function stop() {
    service 1panel stop && echo "1Panel 服务已停止。" || systemctl stop 1panel.service
}
function restart() {
    service 1panel restart && echo "1Panel 服务已重启。" || systemctl restart 1panel.service
}
function uninstall() {
    check_root
    read -p "卸载将会完全清除 1Panel 服务和数据目录，是否继续 [y/n] : " yn
    if [ "$yn" == "Y" ] || [ "$yn" == "y" ]; then
        echo -e "================== 开始卸载 1Panel Linux 服务器运维管理面板 =================="
        echo -e ""
        echo -e "1) 停止 1Panel 服务进程..."
        if which opkg &>/dev/null;then
            service 1panel stop
            echo -e "2) 删除 1Panel 服务和数据目录..."
            rm -rf $BASE_DIR/1panel /usr/local/bin/{1pctl,1panel} 
            echo -e "3) 禁用并删除服务配置文件..."
            /etc/init.d/1panel disable 
            rm -rf /etc/init.d/1panel
        else
            systemctl stop 1panel.service
            systemctl disable 1panel.service >/dev/null 2>&1
            echo -e "2) 删除 1Panel 服务和数据目录..."
            rm -rf $BASE_DIR/1panel /usr/local/bin/{1pctl,1panel} /etc/systemd/system/1panel.service
            echo -e "3) 重新加载服务配置文件..."
            systemctl daemon-reload
            systemctl reset-failed
        fi
        echo -e ""
        echo -e "================================== 卸载完成 =================================="
    else
        exit 0
    fi
}
function user-info() {
    1panel user-info
}
function listen-ip() {
    1panel listen-ip
}
function listen_ipv4() {
    1panel listen-ip ipv4
    restart
}
function listen_ipv6() {
    1panel listen-ip ipv6
    restart
}
function restore() {
    read -p "1Panel 将会恢复至上一个稳定版本，是否继续 [y/n] : " yn
    if [ "$yn" == "Y" ] || [ "$yn" == "y" ]; then
        echo -e ""
        1panel restore
        service 1panel reload
        restart
        echo -e ""
        1panel version
    else
        exit 0
    fi
}
function version() {
    1panel version
}
function reset() {
    1panel reset
}
function reset_domain() {
    1panel reset domain
}
function reset_entrance() {
    1panel reset entrance
}
function reset_https() {
    1panel reset https
    restart
}
function reset_ips() {
    1panel reset ips
}
function reset_mfa() {
    1panel reset mfa
}
function update() {
    1panel update
}
function update_username() {
    1panel update username
}
function update_password() {
    1panel update password
}
function update_port() {
    1panel update port
}

function main() {
    case "${action}" in
        status)
            status
            ;;
        start)
            start
            ;;
        stop)
            stop
            ;;
        restart)
            restart
            ;;
        restore)
            restore
            ;;
        uninstall)
            uninstall
            ;;
        user-info)
            user-info
            ;;
        listen-ip)
            case "${target}" in
                ipv4)
                    listen_ipv4
                    ;;
                ipv6)
                    listen_ipv6
                    ;;
                *)
                    listen-ip
                    ;;
            esac
            ;;
        version)
            version
            ;;
        reset)
            case "${target}" in
                domain)
                    reset_domain
                    ;;
                entrance)
                    reset_entrance
                    ;;
                https)
                    reset_https
                    ;;
                ips)
                    reset_ips
                    ;;
                mfa)
                    reset_mfa
                    ;;
                *)
                    reset
                    ;;
            esac
            ;;
        update)
            case "${target}" in
                username)
                    update_username
                    ;;
                password)
                    update_password
                    ;;
                port)
                    update_port
                    ;;
                *)
                    update
                    ;;
            esac
            ;;
        help)
            usage
            ;;
        --help)
            usage
            ;;
        "")
            usage
            ;;
        *)
        echo "不支持的参数，请使用 help 或 --help 参数获取帮助"
    esac
}
main
